name: Python Lambda Test and CDK Deploy

on:
  push:
    branches: [ main ]  # CDK deployment only runs on main branch
  pull_request:
    branches: [ main ]  # Tests run on PRs but no deployment
  workflow_dispatch:  # Allows manual triggering

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Specify the Python version used by Lambda
        
    - name: Set up Node.js for CDK
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # CDK requires Node.js
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Install CDK
      run: |
        npm install -g aws-cdk@latest
        npm install aws-cdk-lib@latest
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Specify your preferred AWS region
        
    - name: Set up environment variables
      run: |
        echo "TABLE_NAME=PageHitCounters" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
        
    - name: Run unit tests
      id: run_tests
      run: |
        cd lambda
        # Set AWS dummy credentials for testing
        export AWS_ACCESS_KEY_ID="dummy-access-key"
        export AWS_SECRET_ACCESS_KEY="dummy-secret-key"
        export AWS_DEFAULT_REGION="us-east-1"
        python -m unittest tests_for_index.py
      continue-on-error: true  # Don't fail the job immediately on test failure
      
    - name: Check test results
      run: |
        if [[ "${{ steps.run_tests.outcome }}" == "failure" ]]; then
          echo "::error::Unit tests failed. Fix the issues before continuing."
          exit 1
        else
          echo "Unit tests passed successfully."
        fi
      
    - name: Run Lambda function validation
      if: steps.run_tests.outcome == 'success'
      run: |
        cd lambda
        echo "Validating Lambda function can be imported..."
        python -c "import index; print('Lambda function loaded successfully')"
        # Note: We don't actually invoke the lambda_handler since it would need DynamoDB
        
    - name: Build TypeScript CDK code
      if: steps.run_tests.outcome == 'success'
      run: |
        npm run build  # Compile TypeScript to JavaScript
        
    - name: Deploy CDK Stack
      if: steps.run_tests.outcome == 'success' && github.ref == 'refs/heads/main'
      run: |
        echo "Deploying CDK stack to AWS..."
        cdk deploy --require-approval never
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        
    - name: Notify on success
      if: steps.run_tests.outcome == 'success' && github.ref == 'refs/heads/main'
      run: |
        echo "✅ All tests passed and CDK stack deployed successfully!"
        
    - name: Notify on test success (non-main branch)
      if: steps.run_tests.outcome == 'success' && github.ref != 'refs/heads/main'
      run: |
        echo "✅ All tests passed! CDK deployment skipped (not on main branch)"